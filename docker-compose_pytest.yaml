#######################################################################################
#
# Description:
# Build and run testing with Python testing framework *pytest*
#
# Environment variables:
# * TESTING_TYPE: Which testing you want to get and run.
#         - Allowable values: 'unit-test', 'integration-test'
#
# Example running docker command line:
# >>> # Activate and run the docker compose.
# >>> docker-compose -f ./docker-compose_pytest.yaml up --build
#
# >>> # Shutdown the docker compose.
# >>> docker-compose -f ./docker-compose_pytest.yaml down
#
# Warning:
# Please be careful about the resource configuration (the settings in *deploy.resource*).
# The container with not enough resource may crash lead to it got fail while activating
# entire docker-compose project. For example, I had faced an issue about other 2 or 3
# containers setup successfully temporary, and some of them dead. However, because it
# was successfully activate the service in containers so that the health checking mechanism
# determines the container was health, and docker-compose would go ahead to activate
# rest of containers. But the rest of containers depends on the service health of other
# containers. So unfortunately, it would occur failure and print the error log message
# like below:
#
#     ERROR: compose.cli.main.main: Encountered errors while bringing up the project.
#
# But the truly root cause is the resource of other containers is NOT enough. Therefore,
# please be careful of the resource setting in each container.
#
#######################################################################################

version: "3.8"

services:

  pytest_linux:
    container_name: sc-appintegration_pytest
    environment:
#      - TESTING_TYPE=unit-test
      - TESTING_TYPE=integration-test
      - PYTEST_KAFKA_IP=10.20.23.11
      - PYTEST_RABBITMQ_HOST=10.20.23.12:5672
#      - PYTEST_RABBITMQ_VIRTUAL_HOST=/
#      - PYTEST_RABBITMQ_USERNAME=user
#      - PYTEST_RABBITMQ_PASSWORD=password
      - PYTEST_ACTIVEMQ_HOST=10.20.23.13:61613
    build:
      context: .
      dockerfile: Dockerfile_pytest
    depends_on:
        pytest_mq_kafka:
          condition: service_healthy
        pytest_mq_rabbitmq:
          condition: service_healthy
        pytest_mq_activemq:
          condition: service_healthy
    networks:
      sc-appintegraton_pytest_network:
        ipv4_address: 10.20.23.2
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
      restart_policy:
        condition: on-failure
        max_attempts: 2

  pytest_zookeeper:
    container_name: sc-appintegration_pytest-zookeeper
    image: zookeeper:latest
    restart: always
    networks:
      sc-appintegraton_pytest_network:
        ipv4_address: 10.20.23.10
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
      - "7010:7010"
    healthcheck:
      test: ["CMD", "/apache-zookeeper-3.8.0-bin/bin/zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
      restart_policy:
        condition: on-failure
        max_attempts: 2

  pytest_mq_kafka:
    container_name: sc-appintegration_pytest-kafka
    image: wurstmeister/kafka:2.13-2.7.0
    restart: always
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=10.20.23.10:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.20.23.11:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
    depends_on:
      pytest_zookeeper:
        condition: service_healthy
    networks:
      sc-appintegraton_pytest_network:
        ipv4_address: 10.20.23.11
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "/opt/kafka_2.13-2.7.0/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "127.0.0.1:9092", "--version"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.75'
          memory: 256M
      restart_policy:
        condition: on-failure
        max_attempts: 2

  pytest_mq_rabbitmq:
    container_name: sc-appintegration_pytest-rabbitmq
    image: rabbitmq:3.9.20
    hostname: pytest-rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      sc-appintegraton_pytest_network:
        ipv4_address: 10.20.23.12
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.75'
          memory: 256M
      restart_policy:
        condition: on-failure
        max_attempts: 2

  pytest_mq_activemq:
    container_name: sc-appintegration_pytest-activemq
    image: rmohr/activemq:5.15.9
    networks:
      sc-appintegraton_pytest_network:
        ipv4_address: 10.20.23.13
    ports:
      - "61613:61613"
      - "8161:8161"
    healthcheck:
      test: ["CMD", "/opt/apache-activemq-5.15.9/bin/activemq", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.75'
          memory: 256M
      restart_policy:
        condition: on-failure
        max_attempts: 2


networks:
  sc-appintegraton_pytest_network:
    # # It would test web spider features so that it needs to connect to internet.
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.20.23.0/24
          gateway: 10.20.23.1
      options:
        parent: en0
